// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  roleId     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tokens     Token[]
  role       Role     @relation(fields: [roleId], references: [id])
  employee   Employee[]
  @@map("users")

}

model Token {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @db.Text
  expire_at DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  @@map("tokens")

}


model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users       User[]
  permissions PermissionRole[]

  @@map("roles")
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles PermissionRole[]

  @@map("permissions")
}

model PermissionRole {
  permissionId Int
  roleId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  permission Permission @relation(fields: [permissionId], references: [id])
  role       Role       @relation(fields: [roleId], references: [id])

  @@id([permissionId, roleId])
  @@map("permission_role")
}
model Employee {
  id          Int       @id @default(autoincrement())
  userId      Int
  address     String
  phone       String
  born_at     String 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  divisionId  Int
  
  division    Division @relation(fields: [divisionId], references: [id]) // Menambahkan tanda tanya (?) untuk menunjukkan bahwa Division adalah opsional
  user        User      @relation(fields: [userId], references: [id])
}

model Division {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  employees   Employee[]
  
  @@map("divisions")
}
